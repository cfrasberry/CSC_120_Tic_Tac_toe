# -*- coding: utf-8 -*-
"""CSC_120_Tic_Tac_Toe

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nfCAREVLoAEJwurX_bLs_CkBWMaXxmal
"""

board = [['-','-','-'],['-','-','-'],['-','-','-']]

def print_board():
  for i in range(0,3):
    print(board[i])

def check_mark(row, col):
  if board[row][col] == '-':
    return True
  else:
    return False

def place_mark(row, col, player):
  while True:
    while True:
      if str(row) in ['0','1','2'] and str(col) in ['0','1','2']:
        row = int(row)
        col = int(col)
        break
      else:
        print("Invalid row or column. Please select row / col between values 0 to 2")
        if player == 'X':
          print("Invalid row or column. Please select row / col between values 0 to 2")
          row = input("Player 1 row (0, 1, 2):")
          col = input("Player 1 column (0, 1, 2):")
        else:
          print("Invalid row or column. Please select row / col between values 0 to 2")
          row = input("Player 2 row (0, 1, 2):")
          col = input("Player 2 column (0, 1, 2):")

    if check_mark(row, col) == True:
      board[row][col] = player
      break
    else:
      if player == 'X':
        print("Space already taken! Enter new coordinates.")
        row = input("Player 1 row (0, 1, 2):")
        col = input("Player 1 column (0, 1, 2):")
      else:
        print("Space already taken! Enter new coordinates.")
        row = input("Player 2 row (0, 1, 2):")
        col = input("Player 2 column (0, 1, 2):")


def check_win(player):

  #Row checks
  if board[0][0] == player and board[0][1] == player and board[0][2] == player:
    win = True
  elif board[1][0] == player and board[1][1] == player and board[1][2] == player:
    win = True
  elif board[2][0] == player and board[2][1] == player and board[2][2] == player:
    win = True

  #Column checks
  elif board[0][0] == player and board[1][0] == player and board[2][0] == player:
    win = True
  elif board[0][1] == player and board[1][1] == player and board[2][1] == player:
    win = True
  elif board[0][2] == player and board[1][2] == player and board[2][2] == player:
    win = True

  #Diagonal checks
  elif board[0][0] == player and board[1][1] == player and board[2][2] == player:
    win = True
  elif board[0][2] == player and board[1][1] == player and board[2][0] == player:
    win = True
  else:
    win = False
  
  if win == True:
    if player == 'X':
      print('Player 1 wins!')
    elif player == 'O':
      print('Player 2 wins!')
  
  return win



def main():
  player1 = 'X'
  player2 = 'O'
  print_board()

  while True:

    player1_row_input = input("Player 1 row (0, 1, 2):")
    player1_col_input = input("Player 1 column (0, 1, 2):")
    while True:
      if player1_row_input in ['0','1','2'] and player1_col_input in ['0','1','2']:
        break
      else:
        print("Invalid row or column. Please select row / col between values 0 to 2")
        player1_row_input = input("Player 1 row (0, 1, 2):")
        player1_col_input = input("Player 1 column (0, 1, 2):")

    place_mark(player1_row_input, player1_col_input, player1)
    print_board()
    if check_win(player1) == True:
      break
    
    filled_space = 0
    for y in range(0,3):
      for x in range(0,3):
        if board[y][x] != '-':
          filled_space += 1
    if filled_space == 9:
      print('Draw!')
      break

    player2_row_input = int(input("Player 2 row (0, 1, 2):"))
    player2_col_input = int(input("Player 2 column (0, 1, 2):"))
    while True:
      if player2_row_input in [0,1,2] and player2_col_input in [0,1,2]:
        break
      else:
        print("Invalid row or column. Please select row / col between values 0 to 2")
        player2_row_input = int(input("Player 2 row (0, 1, 2):"))
        player2_col_input = int(input("Player 2 column (0, 1, 2):"))

    place_mark(player2_row_input, player2_col_input, player2)
    print_board()
    if check_win(player2) == True:
      break

    filled_space = 0
    for y in range(0,3):
      for x in range(0,3):
        if board[y][x] != '-':
          filled_space += 1
    if filled_space == 9:
      print('Draw!')
      break


main()